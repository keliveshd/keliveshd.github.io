<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Evilek&#39;s-Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-05-30T03:05:05.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Apple Developer公司账户注册步骤</title>
    <link href="http://yoursite.com//blog/2016/05/Apple-Developer%E5%85%AC%E5%8F%B8%E8%B4%A6%E6%88%B7%E6%B3%A8%E5%86%8C%E6%AD%A5%E9%AA%A4.html"/>
    <id>http://yoursite.com//blog/2016/05/Apple-Developer公司账户注册步骤.html</id>
    <published>2016-05-30T02:25:08.000Z</published>
    <updated>2016-05-30T03:05:05.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-注册&quot;&gt;&lt;a href=&quot;#1-注册&quot; class=&quot;headerlink&quot; title=&quot;1.注册&quot;&gt;&lt;/a&gt;1.注册&lt;/h2&gt;&lt;h3 id=&quot;1-1-注册apple-id&quot;&gt;&lt;a href=&quot;#1-1-注册apple-id&quot; class=&quot;headerlink&quot; title=&quot;1.1 注册apple id&quot;&gt;&lt;/a&gt;1.1 注册apple id&lt;/h3&gt;&lt;p&gt;访问 &lt;a href=&quot;https://appleid.apple.com/cn/#!&amp;amp;page=create&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;苹果AppleId注册地址&lt;/a&gt; 按照提示步骤注册。&lt;a href=&quot;https://developer.apple.com/support/enrollment/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;详细注册规则&lt;/a&gt;&lt;br&gt;所需资料:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注册邮箱&lt;/li&gt;
&lt;li&gt;密码&lt;/li&gt;
&lt;li&gt;姓氏、名字&lt;/li&gt;
&lt;li&gt;安全提示问题&lt;img src=&quot;http://ww1.sinaimg.cn/large/72f96cbagw1f4d7lmpfk4j20rg09u766&quot; alt=&quot;2016-05-30_10:37:00.jpg&quot;&gt;&lt;h3 id=&quot;1-2-开通Organization开发者账号&quot;&gt;&lt;a href=&quot;#1-2-开通Organization开发者账号&quot; class=&quot;headerlink&quot; title=&quot;1.2 开通Organization开发者账号&quot;&gt;&lt;/a&gt;1.2 开通Organization开发者账号&lt;/h3&gt;1.访问 &lt;a href=&quot;https://developer.apple.com/enroll/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apple Developer Program Enrollment页面&lt;/a&gt;&lt;br&gt;2.登录 1.1 中注册的Apple Id ，在页面中 Entity Type 选项选择 I develop apps as &lt;strong&gt;Company/Organization&lt;/strong&gt; 点击 &lt;em&gt;Continue&lt;/em&gt;&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/72f96cbagw1f4d7qd0rwxj21c60pan50&quot; alt=&quot;2016-05-30_10:41:37.jpg&quot;&gt;&lt;br&gt;3.根据提示选择公司类型&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/72f96cbagw1f4d7t2ddrfj20q40cwdhf&quot; alt=&quot;2016-05-30_10:43:51.jpg&quot;&gt;&lt;br&gt;4.输入公司资料&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;法律实体名称:&lt;/strong&gt;:Legal Entity Name(Include the entity type, such as Inc., LLC, GmbH, etc.)包括实体类型，例如公司，LLC GmbH的等&lt;code&gt;要注册 Apple Developer Program，您的所在组织必须为法人实体，这样才能和 Apple 签订合同。我们不接受 DBA、虚构公司、商号或子公司。法人实体名称将显示为您在 App Store 和 Mac App Store 上分发的 app 的“销售方”。示例：销售方：ABC Company, Inc.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;邓白氏编码:&lt;/strong&gt; D-U-N-S® Number &lt;a href=&quot;https://developer.apple.com/support/D-U-N-S/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;申请方式&lt;/a&gt;&lt;br&gt;&lt;code&gt;您所在的组织必须拥有 D-U-N-S Number，以便我们验证您所在组织的身份和法人实体状态。这些唯一的九位编码由 Dun &amp;amp; Bradstreet 进行分配，广泛用作标准的企业识别码。&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;法人实体名称&lt;/li&gt;
&lt;li&gt;总部地址&lt;/li&gt;
&lt;li&gt;邮寄地址&lt;/li&gt;
&lt;li&gt;您的工作联系信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网站&lt;/strong&gt;Website&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##2.开通Apple Developer Program&lt;/p&gt;
&lt;p&gt;###2.1 定价&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apple Developer Program&lt;/strong&gt;。如果您是个人或代表独资/个人企业并有意创建 app 在适用于 iPhone、iPad、Mac 和 Apple Watch 的 App Store 上分发，请注册 Apple Developer Program。会员资格包括以下内容的使用权限：测试版 OS、高级 app 功能，以及用于开发、测试和分发 app 和 Safari Extensions 的工具。作为个人注册的开发者将使用个人姓名在 App Store 上销售 app。&lt;/p&gt;
&lt;p&gt;会员资格每年 99 美元&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Apple Developer Enterprise Program&lt;/strong&gt;。如果您的组织想要创建专门设计的 app 并只将其分发给您组织的员工，请注册 Apple Developer Enterprise Program。会员资格包括您的整个开发团队对以下内容的使用权限：测试版 OS、高级 app 功能以及开发、测试和分发 app 所需的工具。在注册过程中，公司和教育机构必须提供注册其法定实体时的 D-U-N-S 编号（可免费获取）。&lt;/p&gt;
&lt;p&gt;会员资格每年 299 美元&lt;/p&gt;
&lt;p&gt;###2.2 付款&lt;/p&gt;
&lt;p&gt;结账时，您可以使用您所在国家/地区的 Apple Store 在线商店提供的任何付款方式。如果您要通过信用卡付款，并以个人身份注册，则必须使用您自己的信用卡来完成购买。如果未使用自己的信用卡，您的注册会被延迟，且您将被要求提供由政府颁发且带有相片的身份证件副本。完成购买后，您将收到来自 Apple Store 在线商店的购买确认，以及来自 Apple Developer Program Support 的会员资格确认。&lt;/p&gt;
&lt;p&gt;如果您所在国家/地区的 Apple Store 在线商店上没有可用的 Apple Developer 产品，您便会看到一张信用卡表单。请使用能以美元支付的信用卡进行购买。当您完成购买提交后，您会收到处理确认的电子邮件。当您的购买处理完成后，您会收到购买确认，以及含有会员资格激活说明的电子邮件。&lt;/p&gt;
&lt;p&gt;成为会员后，您便可以通过登录 &lt;a href=&quot;/account/&quot;&gt;Member Center&lt;/a&gt; 来访问自己的开发者帐户。您还可以登录 iTunes Connect 以设置帐户，用于在适用于 iPhone、iPad、Mac 和 Apple Watch 的 App Store 上分发 app。请阅读 &lt;a href=&quot;/support/itunes-connect/cn/&quot;&gt;iTunes Connect 支持页面&lt;/a&gt;来详细了解 iTunes Connect。&lt;/p&gt;
&lt;p&gt;###2.3 发票&lt;/p&gt;
&lt;p&gt;您可以通过在 Apple Store 在线商店中查看您的帐户来访问所购买产品的发票。如果您在中国的 Apple Store 在线商店中购买了产品，并希望请求增值税发票，请致电 400-666-8800 与 Apple Store 在线商店支持专家进行交谈。&lt;/p&gt;
&lt;p&gt;###2.4 续订&lt;/p&gt;
&lt;h4 id=&quot;续订组织的会员资格&quot;&gt;&lt;a href=&quot;#续订组织的会员资格&quot; class=&quot;headerlink&quot; title=&quot;续订组织的会员资格&quot;&gt;&lt;/a&gt;续订组织的会员资格&lt;/h4&gt;&lt;p&gt;如果您在 Apple Developer Program 中注册为开发组织，需要由团队代理（iTunes Connect 中分配了“法律”角色的人员）代表您所在的组织完成成员资格的续订。他们还可以管理会员资格的自动续订*。团队代理的联系信息可以在 Member Center 的“&lt;a href=&quot;/account/?view=membership&quot;&gt;您的帐户&lt;/a&gt;”(Your Account) 部分中找到。有关角色的更多信息，请参阅“&lt;a href=&quot;/support/roles/cn/&quot;&gt;计划角色和 iTunes Connect 角色&lt;/a&gt;”。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-注册&quot;&gt;&lt;a href=&quot;#1-注册&quot; class=&quot;headerlink&quot; title=&quot;1.注册&quot;&gt;&lt;/a&gt;1.注册&lt;/h2&gt;&lt;h3 id=&quot;1-1-注册apple-id&quot;&gt;&lt;a href=&quot;#1-1-注册apple-id&quot; class=&quot;headerli
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
      <category term="Technology" scheme="http://yoursite.com/categories/Blog/Technology/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Injection for Xcode：成吨的提高开发效率</title>
    <link href="http://yoursite.com//blog/2016/05/Injection-for-Xcode%EF%BC%9A%E6%88%90%E5%90%A8%E7%9A%84%E6%8F%90%E9%AB%98%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87.html"/>
    <id>http://yoursite.com//blog/2016/05/Injection-for-Xcode：成吨的提高开发效率.html</id>
    <published>2016-05-26T01:04:28.000Z</published>
    <updated>2016-05-26T01:06:14.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;转载&lt;/strong&gt;:&lt;a href=&quot;&quot;&gt;http://www.jianshu.com/p/27be46d5e5d4&lt;/a&gt;&lt;br&gt;&lt;strong&gt;作者&lt;/strong&gt;:没故事的卓同学&lt;br&gt;今天强烈推荐一个Xcode高端必备插件：&lt;a href=&quot;https://github.com/johnno1962/injectionforxcode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Injection Plugin for Xcode&lt;/a&gt;&lt;br&gt;直接放demo演示动图：  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/2016-05-26-225849-2774ad82cd157ca0.gif&quot; alt=&quot;225849-2774ad82cd157ca0&quot;&gt;  &lt;/p&gt;
&lt;p&gt; Injection Plugin for Xcode&lt;/p&gt;
&lt;p&gt;我很久以前就希望有这么一种功能，直接修改某行代码，F5一下就能刷新这个实例，而不用重写build整个项目。靠夭，我不是在说前端！&lt;br&gt;没想居然有一天，梦想照入现实！！！是的，就是它，不用重新启动应用就可以让修改的代码生效。&lt;/p&gt;
&lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;p&gt;超级简单：修改源码，按下刷新的快捷键&lt;code&gt;ctrl&lt;/code&gt;+&lt;code&gt;=&lt;/code&gt;。会有一个快速的进度条闪过，修改的代码就&lt;strong&gt;生效了。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;可以使用Alcatraz安装&lt;/li&gt;
&lt;li&gt;或者clone这个项目，运行InjectionPluginLite/InjectionPlugin.xcodeproj。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;检验安装成功&quot;&gt;&lt;a href=&quot;#检验安装成功&quot; class=&quot;headerlink&quot; title=&quot;检验安装成功&quot;&gt;&lt;/a&gt;检验安装成功&lt;/h1&gt;&lt;p&gt;在某个类里添加下面的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)injected&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;I&#39;ve been injected: %@&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者swift下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;injected&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;ve been injected: (self)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打一个断点在这行代码上，按下快捷键ctrl+=后，代码执行到这个类时，如果断点进入这个方法说明你已经安装成功了。&lt;/p&gt;
&lt;h1 id=&quot;支持Swift&quot;&gt;&lt;a href=&quot;#支持Swift&quot; class=&quot;headerlink&quot; title=&quot;支持Swift&quot;&gt;&lt;/a&gt;支持Swift&lt;/h1&gt;&lt;p&gt;Swift中的大部分类都可以正常使用。不过以下一些情况使用会有问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结构中的修改&lt;/li&gt;
&lt;li&gt;标记为final的func和class&lt;/li&gt;
&lt;li&gt;不在类里的全局函数和变量&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;工作原理&quot;&gt;&lt;a href=&quot;#工作原理&quot; class=&quot;headerlink&quot; title=&quot;工作原理&quot;&gt;&lt;/a&gt;工作原理&lt;/h1&gt;&lt;p&gt;Injection是一个Xcode的扩展插件，可以让你修改一个类的代码实现而不用重启整个应用。&lt;/p&gt;
&lt;p&gt;它通过解析应用的build日志来判断源代码文件上次是怎么被编译的。然后会把这些重新编译一遍包在一个已经通过动态加载器（dynamic loader）注入到应用的bundle里。这个时候其实有两个版本的类在app里，一个原始的和一个修改过的版本。修改过的版本通过和原始类”swizzled”来产生效果。&lt;/p&gt;
&lt;p&gt;swizzling利用了OC的runtime。这个也可以在Swift中没有标记为final或者private的方法（可以被override的方法）。对结构体无效。&lt;/p&gt;
&lt;h1 id=&quot;这个插件还可以做点什么&quot;&gt;&lt;a href=&quot;#这个插件还可以做点什么&quot; class=&quot;headerlink&quot; title=&quot;这个插件还可以做点什么&quot;&gt;&lt;/a&gt;这个插件还可以做点什么&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;按照这个文档操作，还可以支持Storyboard &lt;a href=&quot;https://github.com/johnno1962/injectionforxcode/blob/master/documentation/storyboards.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Storyboard-based iOS projects&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;也可以可视化的调整颜色 &lt;a href=&quot;https://github.com/johnno1962/injectionforxcode/blob/master/documentation/tunable_parameters.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;collection of tunable parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;当你开始注入时，会在同一个目录下生成一个项目文件：iOSInjectionProject 或者 OSXInjectionProject。这个项目用于注入你的修改到原项目。&lt;strong&gt;建议加入&lt;code&gt;.gitignore&lt;/code&gt;。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ctrl+=的快捷键可以在 “Tunable App Parameters”面板里自定义&lt;/li&gt;
&lt;li&gt;如果想在一台设备上使用，参考这个文档&lt;a href=&quot;https://github.com/johnno1962/injectionforxcode/blob/master/documentation/patching_injection.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;patch to your project.&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;我安装时遇到的一个错误&quot;&gt;&lt;a href=&quot;#我安装时遇到的一个错误&quot; class=&quot;headerlink&quot; title=&quot;我安装时遇到的一个错误&quot;&gt;&lt;/a&gt;我安装时遇到的一个错误&lt;/h1&gt;&lt;p&gt;第一次使用，提示我项目里使用的一个第三方framework找不到。这个时候打开它自动生成的iOSInjectionProject，编译一下可以看到错误的具体原因。我看到issue里也好多人遇到。解决方式就是将自己项目framework search paths中的这个第三方框架的路径拷贝到iOSInjectionProject里。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;转载&lt;/strong&gt;:&lt;a href=&quot;&quot;&gt;http://www.jianshu.com/p/27be46d5e5d4&lt;/a&gt;&lt;br&gt;&lt;strong&gt;作者&lt;/strong&gt;:没故事的卓同学&lt;br&gt;今天强烈推荐一个Xcode高端必备插件：&lt;a href=&quot;h
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
      <category term="Technology" scheme="http://yoursite.com/categories/Blog/Technology/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Reveal调试工具加载方法</title>
    <link href="http://yoursite.com//blog/2016/05/Reveal%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E5%8A%A0%E8%BD%BD%E6%96%B9%E6%B3%95.html"/>
    <id>http://yoursite.com//blog/2016/05/Reveal调试工具加载方法.html</id>
    <published>2016-05-25T14:51:24.000Z</published>
    <updated>2016-05-25T15:11:34.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;Integrating Reveal without modifying your Xcode project&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;reveal: 檢視 iOS app 的 view 結構。&lt;/em&gt;&lt;br&gt;给出了如何不用修改Xcode工程就可以加载使用Reveal的方法。&lt;br&gt;在当前用户目录新建一个文件.lldbinit，位于~/.lldbinit，LLDB每次启动的时候都会加载这个文件。&lt;br&gt;&lt;strong&gt;在.lldbinit中输入如下内容：&lt;/strong&gt; &lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;command alias reveal_load_sim expr (Class)&lt;span class=&quot;built_in&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;IBARevealLoader&quot;&lt;/span&gt;) == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; ? (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)dlopen(&lt;span class=&quot;string&quot;&gt;&quot;/Applications/Reveal.app/Contents/SharedSupport/iOS-Libraries/libReveal.dylib&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0x2&lt;/span&gt;) : ((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;command alias reveal_load_dev expr (Class)&lt;span class=&quot;built_in&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;IBARevealLoader&quot;&lt;/span&gt;) == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; ? (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)dlopen((&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;*)[(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;*)[(&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt;*)[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; mainBundle] pathForResource:&lt;span class=&quot;string&quot;&gt;@&quot;libReveal&quot;&lt;/span&gt; ofType:&lt;span class=&quot;string&quot;&gt;@&quot;dylib&quot;&lt;/span&gt;] cStringUsingEncoding:&lt;span class=&quot;number&quot;&gt;0x4&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;0x2&lt;/span&gt;) : ((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;command alias reveal_start expr (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)[(&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;*)[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] postNotificationName:&lt;span class=&quot;string&quot;&gt;@&quot;IBARevealRequestStart&quot;&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;command alias reveal_stop expr (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)[(&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt;*)[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] postNotificationName:&lt;span class=&quot;string&quot;&gt;@&quot;IBARevealRequestStop&quot;&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述文件创建了4个命令： &lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;reveal_load_sim,reveal_load_dev, &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;reveal_start &lt;/span&gt;和 &lt;span class=&quot;keyword&quot;&gt;reveal_stop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;####手动加载调试库&lt;br&gt;在设备起来之后，你就可以断下应用，在LLDB提示框中输入上述的命令了。&lt;br&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/201601/1464188644996.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;请注意：只有在iOS应用发出了UIApplicationDidFinishLaunchingNotification通知之后，比如应用的delegate已经处理过application::didFinishLaunchingWithOptions:之后才能调用上面的reveal&lt;em&gt;load&lt;/em&gt;*命令，然后再调用reveal_start&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reveal_load_sim&lt;/code&gt; 这个只在iOS模拟器上有效。它从Reveal的应用程序bundle中找到并加载&lt;code&gt;libReveal.dylib&lt;/code&gt;（请确保你把Reveal安装到了系统的 &lt;em&gt;Application&lt;/em&gt; 文件夹，如果你换地方了，你修改上述的文件）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reveal_load_dev&lt;/code&gt; 这个命令在iOS设备和模拟器上都有效。不过，它需要你在Build Phase中的的Copy Bundle Resources中加上libReveal.dylib，请确保没有放到&lt;code&gt;Link Binary With Libraries&lt;/code&gt;这个地方。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reveal_start&lt;/code&gt; 这个命令发出一个通知启动Reveal Server。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reveal_stop&lt;/code&gt; 这个命令发出一个通知停止Reveal Server。&lt;br&gt;请注意：只有在iOS应用发出了&lt;code&gt;UIApplicationDidFinishLaunchingNotification&lt;/code&gt;通知之后，比如应用的delegate已经处理过&lt;code&gt;application::didFinishLaunchingWithOptions:&lt;/code&gt;之后才能调用上面的&lt;code&gt;reveal_load_*&lt;/code&gt;命令，然后再调用&lt;code&gt;reveal_start&lt;/code&gt;&lt;br&gt;在设备起来之后，你就可以断下应用，在LLDB提示框中输入上述的命令了。 &lt;/p&gt;
&lt;p&gt;上述的过程还需要手动输入，下面介绍如何设置条件断点，使得Reveal在启动之后自动加载。&lt;br&gt;在你的应用的&lt;code&gt;application:didFinishLaunchingWithOptions&lt;/code&gt;中的代码出加一个断点，然后右键，选择编辑断点。&lt;br&gt;输入如下图一样的命令： &lt;/p&gt;
&lt;p&gt;重新运行下应用，如果控制台输出了如下信息： &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Reveal server started.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;说明Reveal已经自动成功加载。&lt;br&gt;&lt;strong&gt;真机补充:&lt;/strong&gt;&lt;br&gt;真机调试下需要额外增加如下配置 &lt;/p&gt;
&lt;p&gt;要用Reveal连接真机调试，我们需要先把Reveal的动态链接库上传到真机上。由于iOS设备有沙盒存在，所以我们只能将Reveal的动态链接库添加到工程中。&lt;/p&gt;
&lt;p&gt;点击Reveal菜单栏的”Help”-&amp;gt;”Show Reveal Library in Finder”选项（如下图所示），可以在Finder中显示出Reveal的动态链接库：libReveal.dylib&lt;br&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/201601/1464188790348.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;在 Copy Bundle Resources 配置区域中 ，加入&lt;code&gt;libReveal.dylib&lt;/code&gt;。&lt;br&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/201601/1464188811160.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在Link Binary With Libraries配置项中：&lt;br&gt;如果已有libReveal.dylib，请将其移除——不应在编译时连接dylib文件。&lt;br&gt;如果下列系统框架与库文件还不存在，请将他们加入：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CFNetwork.framework&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;QuartzCore.framework&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CoreGraphics.framework&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xcode一般默认会在工程中包含此框架文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.进入target的Build Phases标签页，选择Editor → Add Build Phase → Add Run Script菜单。在Run Script阶段中加入以下内容:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ -n &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;CODE_SIGN_IDENTITY&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; codesign -fs &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;CODE_SIGN_IDENTITY&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;BUILT_PRODUCTS_DIR&amp;#125;&lt;/span&gt;/&lt;span class=&quot;variable&quot;&gt;$&amp;#123;FULL_PRODUCT_NAME&amp;#125;&lt;/span&gt;/libReveal.dylib&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;之后用Reveal连接真机的方式和连接模拟器的方式类似，我们只需要把上一节提到的断点Action的内容从&lt;code&gt;reveal_load_sim&lt;/code&gt;改成&lt;code&gt;reveal_load_dev&lt;/code&gt;即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Integrating Reveal without modifying your Xcode project&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;reveal: 檢視 iOS app 的 view 結構。&lt;/em&gt;&lt;br&gt;给出了如何不用修改Xcode工
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
      <category term="Technology" scheme="http://yoursite.com/categories/Blog/Technology/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 高效添加圆角效果</title>
    <link href="http://yoursite.com//blog/2016/05/iOS-%E9%AB%98%E6%95%88%E6%B7%BB%E5%8A%A0%E5%9C%86%E8%A7%92%E6%95%88%E6%9E%9C.html"/>
    <id>http://yoursite.com//blog/2016/05/iOS-高效添加圆角效果.html</id>
    <published>2016-05-25T08:50:02.000Z</published>
    <updated>2016-05-26T01:04:46.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;转载&lt;/strong&gt;:&lt;a href=&quot;&quot;&gt;http://www.jianshu.com/p/f970872fdc22&lt;/a&gt;&lt;br&gt;&lt;strong&gt;作者&lt;/strong&gt;:bestswifter&lt;/p&gt;
&lt;p&gt;圆角（RounderCorner）是一种很常见的视图效果，相比于直角，它更加柔和优美，易于接受。但很多人并不清楚如何设置圆角的正确方式和原理。设置圆角会带来一定的性能损耗，如何提高性能是另一个需要重点讨论的话题。我查阅了一些现有的资料，收获良多的同时也发现了一些误导人错误。本文总结整理了一些知识点，概括如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置圆角的正确姿势及其原理&lt;/li&gt;
&lt;li&gt;设置圆角的性能损耗&lt;/li&gt;
&lt;li&gt;其他设置圆角的方法，以及最优选择&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我为本文制作了一个 demo，读者可以在我的 github 上 clone 下来：&lt;a href=&quot;https://github.com/bestswifter/MySampleCode/tree/master/CornerRadius&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CornerRadius&lt;/a&gt;，如果觉得有帮助还望给个star以示支持。项目由 Swift 实现，但请务必相信我即使你只会 Objective-C，也可以看懂它。因为其中的关键知识与 Swift 无关。&lt;/p&gt;
&lt;h1 id=&quot;正确姿势&quot;&gt;&lt;a href=&quot;#正确姿势&quot; class=&quot;headerlink&quot; title=&quot;正确姿势&quot;&gt;&lt;/a&gt;正确姿势&lt;/h1&gt;&lt;p&gt;首先，我想要声明的一点是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;设置圆角很简单，它不会带来任何性能损耗&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为这件事本来就很简单，它只需要一行代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;view.layer.cornerRadius = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;先别急着关掉网页，也别急着回复，我们让事实说话。打开 Instuments，选择 &lt;strong&gt;Core Animation&lt;/strong&gt; 调试，你会发现既没有 Off-Screen Render，也没有降低帧数。关于使用 Instuments 分析应用，你可以参考我的这篇文章：&lt;a href=&quot;http://www.jianshu.com/p/619cf14640f3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIKit性能调优实战讲解&lt;/a&gt;。从截图中可以看到第三个棕色视图&lt;strong&gt;确确实实&lt;/strong&gt;设置了圆角：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/201601/1464187495365.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;圆角效果&lt;/p&gt;
&lt;p&gt;不过查看一下代码可以发现，有一个 &lt;code&gt;UILabel&lt;/code&gt; 也设置了圆角，但是没有表现出任何变化。关于这一点，你可以查看 &lt;code&gt;cornerRadius&lt;/code&gt; 属性的注释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By default, the corner radius does not apply to the image in the layer’s contents property; it applies only to the background color and border of the layer. However, setting the masksToBounds property to true causes the content to be clipped to the rounded corners.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说在默认情况下，这个属性只会影响视图的背景颜色和 border。对于 &lt;code&gt;UILabel&lt;/code&gt; 这样内部还有子视图的控件就无能为力了。所以很多情况下我们会看到这样的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;label.layer.cornerRadius = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;label.layer.masksToBounds = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们把第二行代码添加到 &lt;code&gt;CustomTableViewCell&lt;/code&gt; 的构造方法中，再次运行 Instument，就可以看到圆角效果了。&lt;/p&gt;
&lt;h1 id=&quot;性能损耗&quot;&gt;&lt;a href=&quot;#性能损耗&quot; class=&quot;headerlink&quot; title=&quot;性能损耗&quot;&gt;&lt;/a&gt;性能损耗&lt;/h1&gt;&lt;p&gt;如果你勾选上 &lt;strong&gt;Color Offscreen-Rendered Yellow&lt;/strong&gt;，就会发现 label 的四周出现了黄色的标记，说明这里出现了离屏渲染。关于离屏渲染的介绍，同样可以参考：&lt;a href=&quot;http://www.jianshu.com/p/619cf14640f3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIKit性能调优实战讲解&lt;/a&gt;，就不在本文赘述了。&lt;/p&gt;
&lt;p&gt;需要强调的一点是，&lt;strong&gt;离屏渲染并非由设置圆角导致的！&lt;/strong&gt;通过控制变量的方法很容易得出这个结论，因为 UIView 只是设置了 &lt;code&gt;cornerRadius&lt;/code&gt;，但它没有出现离屏渲染。某些比较权威的文章，比如 &lt;a href=&quot;http://stackoverflow.com/questions/13158796/what-triggers-offscreen-rendering-blending-and-layoutsubviews-in-ios&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stackoverflow&lt;/a&gt; 和 &lt;a href=&quot;http://www.reviewcode.cn/article.html?reviewId=7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodeReview&lt;/a&gt; 都提到设置 &lt;code&gt;cornerRadius&lt;/code&gt; 会导致离屏渲染从而影响性能，我想这实在是冤枉了可爱的 &lt;code&gt;cornerRadius&lt;/code&gt; 变量，也误导了别人。&lt;/p&gt;
&lt;p&gt;虽然设置 &lt;code&gt;masksToBounds&lt;/code&gt; 会导致离屏渲染，从而影响性能，但是这个影响到底会有多大？在我的 iPhone6 上，即使出现了 17 个带有圆角的视图，滑动时的帧数依然在 58 - 59 fps 左右波动。&lt;/p&gt;
&lt;p&gt;然而，这并非说明 iOS 9 做了什么特殊优化，或者是离屏渲染的影响不大，其主要原因在于&lt;strong&gt;圆角不够多&lt;/strong&gt;。当我将一个 &lt;code&gt;UIImageView&lt;/code&gt; 也设置成圆角，也就是屏幕上的圆角视图达到 34 个时，fps 大幅度下降，大约只有 33 左右。基本上已经达到了影响用户体验的范围。因此，一切不讲依据的优化都是耍流氓，如果你的圆角视图不多，cell 不复杂，就不要费力气折腾了。&lt;/p&gt;
&lt;h1 id=&quot;高效地设置圆角&quot;&gt;&lt;a href=&quot;#高效地设置圆角&quot; class=&quot;headerlink&quot; title=&quot;高效地设置圆角&quot;&gt;&lt;/a&gt;高效地设置圆角&lt;/h1&gt;&lt;p&gt;假设现在圆角视图非常多（比如在 UICollectionView 中），那么如何为视图高效的添加圆角呢？网上的教程大多没有说全，因为这个事要分两种情况考虑。为普通的 &lt;code&gt;UIView&lt;/code&gt; 设置圆角，和为 &lt;code&gt;UIImageView&lt;/code&gt; 设置圆角的原理截然不同。&lt;/p&gt;
&lt;p&gt;有一种做法是这样的，这种写法试图实现 &lt;code&gt;cornerRadius = 3&lt;/code&gt; 的效果：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;drawRect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(rect: CGRect)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; maskPath = &lt;span class=&quot;type&quot;&gt;UIBezierPath&lt;/span&gt;(roundedRect: rect,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                byRoundingCorners: .&lt;span class=&quot;type&quot;&gt;AllCorners&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                cornerRadii: &lt;span class=&quot;type&quot;&gt;CGSize&lt;/span&gt;(width: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, height: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; maskLayer = &lt;span class=&quot;type&quot;&gt;CAShapeLayer&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maskLayer.frame = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.bounds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maskLayer.path = maskPath.&lt;span class=&quot;type&quot;&gt;CGPath&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layer.mask = maskLayer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;不过这是一种错的离谱的写法！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，我们应该尽量避免重写 &lt;code&gt;drawRect&lt;/code&gt; 方法。不恰当的使用这个方法会导致内存暴增。举个例子，iPhone6 上与屏幕等大的 &lt;code&gt;UIView&lt;/code&gt;，即使重写一个空的 &lt;code&gt;drawRect&lt;/code&gt; 方法，它也至少占用 &lt;code&gt;750 * 1134 * 4 字节 ≈ 3.4 Mb&lt;/code&gt; 的内存。在 &lt;a href=&quot;http://bihongbo.com/2016/01/03/memoryGhostdrawRect/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;内存恶鬼drawRect&lt;/a&gt; 及其后续中，作者详细介绍了其中原理，据他测试，在 iPhone6 上空的、与屏幕等大的视图重写 &lt;code&gt;drawRect&lt;/code&gt; 方法会消耗 5.2 Mb 内存。总之，能避免重写 &lt;code&gt;drawRect&lt;/code&gt; 方法就尽可能避免。&lt;/p&gt;
&lt;p&gt;其次，这种方法本质上是用遮罩层 &lt;code&gt;mask&lt;/code&gt; 来实现，因此同样无可避免的会导致离屏渲染。我试着将此前 34 个视图的圆角改用这种方法实现，结果 fps 掉到 11 左右。已经属于卡出翔的节奏了。&lt;/p&gt;
&lt;p&gt;忘掉这种写法吧，下面介绍正确的高效设置圆角的姿势。&lt;/p&gt;
&lt;h2 id=&quot;为-UIView-添加圆角&quot;&gt;&lt;a href=&quot;#为-UIView-添加圆角&quot; class=&quot;headerlink&quot; title=&quot;为 UIView 添加圆角&quot;&gt;&lt;/a&gt;为 UIView 添加圆角&lt;/h2&gt;&lt;p&gt;这种做法的原理是手动画出圆角。虽然我们之前说过，为普通的视图直接设置 &lt;code&gt;cornerRadius&lt;/code&gt; 属性即可。但万一不可避免的需要使用 &lt;code&gt;masksToBounds&lt;/code&gt;，就可以使用下面这种方法，它的核心代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kt_drawRectWithRoundedCorner&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(radius radius: CGFloat,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  borderWidth: CGFloat,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  backgroundColor: UIColor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  borderColor: UIColor)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt; &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;UIGraphicsBeginImageContextWithOptions&lt;/span&gt;(sizeToFit, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;UIScreen&lt;/span&gt;.mainScreen().scale)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; context = &lt;span class=&quot;type&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CGContextMoveToPoint&lt;/span&gt;(context, 开始位置);  &lt;span class=&quot;comment&quot;&gt;// 开始坐标右边开始&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CGContextAddArcToPoint&lt;/span&gt;(context, x1, y1, x2, y2, radius);  &lt;span class=&quot;comment&quot;&gt;// 这种类型的代码重复四次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CGContextDrawPath&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;(), .&lt;span class=&quot;type&quot;&gt;FillStroke&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; output = &lt;span class=&quot;type&quot;&gt;UIGraphicsGetImageFromCurrentImageContext&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;UIGraphicsEndImageContext&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个方法返回的是 &lt;code&gt;UIImage&lt;/code&gt;，也就是说我们利用 Core Graphics 自己画出了一个圆角矩形。除了一些必要的代码外，最核心的就是 &lt;code&gt;CGContextAddArcToPoint&lt;/code&gt; 函数。它中间的四个参数表示曲线的起点和终点坐标，最后一个参数表示半径。调用了四次函数后，就可以画出圆角矩形。最后再从当前的绘图上下文中获取图片并返回。&lt;/p&gt;
&lt;p&gt;有了这个图片后，我们创建一个 &lt;code&gt;UIImageView&lt;/code&gt; 并插入到视图层级的底部：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIView&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kt_addCorner&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(radius radius: CGFloat,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      borderWidth: CGFloat,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      backgroundColor: UIColor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      borderColor: UIColor)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; imageView = &lt;span class=&quot;type&quot;&gt;UIImageView&lt;/span&gt;(image: kt_drawRectWithRoundedCorner(radius: radius,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    borderWidth: borderWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    backgroundColor: backgroundColor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    borderColor: borderColor))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.insertSubview(imageView, atIndex: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完整的代码可以在项目中找到，使用时，你只需要这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; view = &lt;span class=&quot;type&quot;&gt;UIView&lt;/span&gt;(frame: &lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;view.kt_addCorner(radius: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;为-UIImageView-添加圆角&quot;&gt;&lt;a href=&quot;#为-UIImageView-添加圆角&quot; class=&quot;headerlink&quot; title=&quot;为 UIImageView 添加圆角&quot;&gt;&lt;/a&gt;为 UIImageView 添加圆角&lt;/h2&gt;&lt;p&gt;相比于上面一种实现方法，为 &lt;code&gt;UIImageView&lt;/code&gt; 添加圆角更为常用。它的实现思路是直接截取图片：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIImage&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kt_drawRectWithRoundedCorner&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(radius radius: CGFloat, &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; sizetoFit: CGSize)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; rect = &lt;span class=&quot;type&quot;&gt;CGRect&lt;/span&gt;(origin: &lt;span class=&quot;type&quot;&gt;CGPoint&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), size: sizetoFit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;UIGraphicsBeginImageContextWithOptions&lt;/span&gt;(rect.size, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;UIScreen&lt;/span&gt;.mainScreen().scale)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;CGContextAddPath&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;UIBezierPath&lt;/span&gt;(roundedRect: rect, byRoundingCorners: &lt;span class=&quot;type&quot;&gt;UIRectCorner&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;AllCorners&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cornerRadii: &lt;span class=&quot;type&quot;&gt;CGSize&lt;/span&gt;(width: radius, height: radius)).&lt;span class=&quot;type&quot;&gt;CGPath&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;CGContextClip&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.drawInRect(rect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;CGContextDrawPath&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;(), .&lt;span class=&quot;type&quot;&gt;FillStroke&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; output = &lt;span class=&quot;type&quot;&gt;UIGraphicsGetImageFromCurrentImageContext&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;UIGraphicsEndImageContext&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;圆角路径直接用贝塞尔曲线绘制，一个意外的 bonus 是还可以选择哪几个角有圆角效果。这个函数的效果是将原来的 &lt;code&gt;UIImage&lt;/code&gt; 剪裁出圆角。配合着这函数，我们可以为 UIImageView 拓展一个设置圆角的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIImageView&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     / !!!只有当 imageView 不为nil 时，调用此方法才有效果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     :param: radius 圆角半径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kt_addCorner&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(radius radius: CGFloat)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.image = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.image?.kt_drawRectWithRoundedCorner(radius: radius, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.bounds.size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完整的代码可以在项目中找到，使用时，你只需要这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; imageView = &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; imgView1 = &lt;span class=&quot;type&quot;&gt;UIImageView&lt;/span&gt;(image: &lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt;(name: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imageView.kt_addCorner(radius: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;提醒&quot;&gt;&lt;a href=&quot;#提醒&quot; class=&quot;headerlink&quot; title=&quot;提醒&quot;&gt;&lt;/a&gt;提醒&lt;/h3&gt;&lt;p&gt;无论使用上面哪种方法，你都需要小心使用背景颜色。因为此时我们没有设置 &lt;code&gt;masksToBounds&lt;/code&gt;，因此超出圆角的部分依然会被显示。因此，你不应该再使用背景颜色，可以在绘制圆角矩形时设置填充颜色来达到类似效果。&lt;/p&gt;
&lt;p&gt;在为 &lt;code&gt;UIImageView&lt;/code&gt; 添加圆角时，请确保 &lt;code&gt;image&lt;/code&gt; 属性不是 &lt;code&gt;nil&lt;/code&gt;，否则这个设置将会无效。&lt;/p&gt;
&lt;h1 id=&quot;实战测试&quot;&gt;&lt;a href=&quot;#实战测试&quot; class=&quot;headerlink&quot; title=&quot;实战测试&quot;&gt;&lt;/a&gt;实战测试&lt;/h1&gt;&lt;p&gt;回到 demo 中，测试一下刚刚定义的这两个设置圆角的方法。首先在 &lt;code&gt;setupContent&lt;/code&gt; 方法中把这两行代码的注释取消掉：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;imgView1.kt_addCorner(radius: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imgView2.kt_addCorner(radius: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后使用自定义的方法为 label 和 view 设置圆角：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;view.kt_addCorner(radius: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;label.kt_addCorner(radius: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在，我们不仅成功的添加了圆角效果，同时还保证了性能不受影响：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/201601/1464187558065.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;性能测试&lt;/p&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;如果能够只用 &lt;code&gt;cornerRadius&lt;/code&gt; 解决问题，就不用优化。&lt;/li&gt;
&lt;li&gt;如果必须设置 &lt;code&gt;masksToBounds&lt;/code&gt;，可以参考圆角视图的数量，如果数量较少（一页只有几个）也可以考虑不用优化。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UIImageView&lt;/code&gt; 的圆角通过直接截取图片实现，其它视图的圆角可以通过 Core Graphics 画出圆角矩形实现。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/20150803/12873.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小心别让圆角成了你列表的帧数杀手&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.reviewcode.cn/article.html?reviewId=7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于性能的一些问题&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;转载&lt;/strong&gt;:&lt;a href=&quot;&quot;&gt;http://www.jianshu.com/p/f970872fdc22&lt;/a&gt;&lt;br&gt;&lt;strong&gt;作者&lt;/strong&gt;:bestswifter&lt;/p&gt;
&lt;p&gt;圆角（RounderCorner）是一种很常
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
      <category term="Technology" scheme="http://yoursite.com/categories/Blog/Technology/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iTerm 2 &amp;&amp; Oh My Zsh</title>
    <link href="http://yoursite.com//blog/2016/05/iTerm-2-Oh-My-Zsh.html"/>
    <id>http://yoursite.com//blog/2016/05/iTerm-2-Oh-My-Zsh.html</id>
    <published>2016-05-24T12:01:55.000Z</published>
    <updated>2016-05-25T00:46:02.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;转自&lt;/strong&gt;&lt;a href=&quot;http://www.jianshu.com/p/7de00c73a2bb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/7de00c73a2bb&lt;/a&gt; 作者:SuperDanny&lt;/p&gt;
&lt;p&gt;一年前，在搞终端的时候偶然一次机会，让我看到了各种强大的DIY界面，这让我很想去自己搞一个。于是在网上不断的寻找资源，也请教了大多数朋友。最终以失败告终。最近，本人又突然想起当时这件事，于是，决定边做笔记，边尝试当初失败的过程。经过一个晚上的时间，终于DIY出我梦寐以求的效果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先放上最终DIY效果图：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/2016-05-24-645592-08177ac961155bb7.png-1.jpeg&quot; alt=&quot;645592-08177ac961155bb7.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;下面，我将分步骤讲解我是怎么一步一步完成DIY过程&quot;&gt;&lt;a href=&quot;#下面，我将分步骤讲解我是怎么一步一步完成DIY过程&quot; class=&quot;headerlink&quot; title=&quot;下面，我将分步骤讲解我是怎么一步一步完成DIY过程&quot;&gt;&lt;/a&gt;下面，我将分步骤讲解我是怎么一步一步完成DIY过程&lt;/h3&gt;&lt;h3 id=&quot;1-首先下载-iTerm-2&quot;&gt;&lt;a href=&quot;#1-首先下载-iTerm-2&quot; class=&quot;headerlink&quot; title=&quot;1. 首先下载 iTerm 2&quot;&gt;&lt;/a&gt;1. 首先下载 &lt;a href=&quot;http://www.iterm2.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iTerm 2&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;2-打开iTerm-2&quot;&gt;&lt;a href=&quot;#2-打开iTerm-2&quot; class=&quot;headerlink&quot; title=&quot;2. 打开iTerm 2&quot;&gt;&lt;/a&gt;2. 打开iTerm 2&lt;/h3&gt;&lt;h3 id=&quot;3-输入下面指令安装oh-my-zsh&quot;&gt;&lt;a href=&quot;#3-输入下面指令安装oh-my-zsh&quot; class=&quot;headerlink&quot; title=&quot;3. 输入下面指令安装oh-my-zsh&quot;&gt;&lt;/a&gt;3. 输入下面指令安装&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;oh-my-zsh&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-接下来安装Powerline&quot;&gt;&lt;a href=&quot;#4-接下来安装Powerline&quot; class=&quot;headerlink&quot; title=&quot;4. 接下来安装Powerline&quot;&gt;&lt;/a&gt;4. 接下来安装&lt;a href=&quot;http://powerline.readthedocs.org/en/latest/installation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Powerline&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;在官网有教程，我们只需要执行官网第一条安装指令就行&lt;/p&gt;
&lt;p&gt;如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install powerline-status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果没有，则先执行安装pip指令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo easy_install pip&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-下载、安装库字体库&quot;&gt;&lt;a href=&quot;#5-下载、安装库字体库&quot; class=&quot;headerlink&quot; title=&quot;5. 下载、安装库字体库&quot;&gt;&lt;/a&gt;5. 下载、安装库&lt;a href=&quot;https://github.com/powerline/fonts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;字体库&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;1）将工程下载下来后cd到&lt;code&gt;install.sh&lt;/code&gt;文件所在目录&lt;/p&gt;
&lt;p&gt;2）执行指令安装字体库&lt;/p&gt;
&lt;p&gt;执行&lt;code&gt;./install.sh&lt;/code&gt;指令安装所有Powerline字体&lt;/p&gt;
&lt;p&gt;安装完成后提示所有字体均已下载到&lt;code&gt;/Users/superdanny/Library/Fonts&lt;/code&gt;路径下&lt;/p&gt;
&lt;p&gt;All Powerline fonts installed to /Users/superdanny/Library/Fonts&lt;/p&gt;
&lt;h3 id=&quot;6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font&quot;&gt;&lt;a href=&quot;#6-设置iTerm-2的Regular-Font-和-Non-ASCII-Font&quot; class=&quot;headerlink&quot; title=&quot;6. 设置iTerm 2的Regular Font 和 Non-ASCII Font&quot;&gt;&lt;/a&gt;6. 设置iTerm 2的Regular Font 和 Non-ASCII Font&lt;/h3&gt;&lt;p&gt;安装完字体库之后，把iTerm 2的设置里的&lt;code&gt;Profile&lt;/code&gt;中的&lt;code&gt;Text&lt;/code&gt; 选项卡中里的&lt;code&gt;Regular Font&lt;/code&gt;和&lt;code&gt;Non-ASCII Font&lt;/code&gt;的字体都设置成 Powerline的字体，我这里设置的字体是12pt Meslo LG S DZ Regular for Powerline&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/2016-05-24-645592-eafa2148c1755383-2.jpeg&quot; alt=&quot;645592-eafa2148&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;7-配色方案&quot;&gt;&lt;a href=&quot;#7-配色方案&quot; class=&quot;headerlink&quot; title=&quot;7. 配色方案&quot;&gt;&lt;/a&gt;7. 配色方案&lt;/h3&gt;&lt;p&gt;1）安装&lt;a href=&quot;https://github.com/altercation/solarized&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;配色方案&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;进入刚刚下载的工程的&lt;code&gt;solarized/iterm2-colors-solarized&lt;/code&gt; 下双击 &lt;code&gt;Solarized Dark.itermcolors&lt;/code&gt; 和 &lt;code&gt;Solarized Light.itermcolors&lt;/code&gt; 两个文件就可以把配置文件导入到 iTerm2 里&lt;/p&gt;
&lt;p&gt;2）配置配色方案&lt;/p&gt;
&lt;p&gt;通过load presets选择刚刚安装的配色主题即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xti6m.com1.z0.glb.clouddn.com/2016-05-24-645592-00c72100725f2407.jpeg&quot; alt=&quot;645592-00c72100725f2407&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;8-使用agnoster主题&quot;&gt;&lt;a href=&quot;#8-使用agnoster主题&quot; class=&quot;headerlink&quot; title=&quot;8. 使用agnoster主题&quot;&gt;&lt;/a&gt;8. 使用agnoster主题&lt;/h3&gt;&lt;p&gt;1）下载&lt;a href=&quot;https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;agnoster&lt;/a&gt;主题&lt;br&gt;到下载的工程里面运行install文件,主题将安装到&lt;code&gt;~/.oh-my-zsh/themes&lt;/code&gt;目录下&lt;/p&gt;
&lt;p&gt;2）设置该主题&lt;br&gt;进入&lt;code&gt;~/.zshrc&lt;/code&gt;打开&lt;code&gt;.zshrc&lt;/code&gt;文件，然后将&lt;code&gt;ZSH_THEME&lt;/code&gt;后面的字段改为&lt;code&gt;agnoster&lt;/code&gt;。&lt;code&gt;ZSH_THEME=&amp;quot;agnoster&amp;quot;&lt;/code&gt;（agnoster即为要设置的主题）&lt;/p&gt;
&lt;h3 id=&quot;9-增加指令高亮效果——zsh-syntax-highlighting&quot;&gt;&lt;a href=&quot;#9-增加指令高亮效果——zsh-syntax-highlighting&quot; class=&quot;headerlink&quot; title=&quot;9. 增加指令高亮效果——zsh-syntax-highlighting&quot;&gt;&lt;/a&gt;9. 增加指令高亮效果——&lt;a href=&quot;https://github.com/zsh-users/zsh-syntax-highlighting&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zsh-syntax-highlighting&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;指令高亮效果作用是当用户输入正确命令时指令会绿色高亮，错误时命令红色高亮&lt;/p&gt;
&lt;p&gt;1）cd到&lt;code&gt;.zshrc&lt;/code&gt;所在目录&lt;/p&gt;
&lt;p&gt;2）执行指令将工程克隆到当前目录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone git://github.com/zsh-users/zsh-syntax-highlighting.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3）打开&lt;code&gt;.zshrc&lt;/code&gt;文件，在最后添加下面内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;source XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;保存文件。&lt;/p&gt;
&lt;p&gt;注意：&lt;code&gt;xxx&lt;/code&gt;代表&lt;code&gt;.zshrc&lt;/code&gt;所在目录&lt;/p&gt;
&lt;p&gt;4）&lt;code&gt;cd ~/.oh-my-zsh/custom/plugins&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5）再次打开&lt;code&gt;.zshrc&lt;/code&gt;文件，在最后面添加下面内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;plugins=(zsh-syntax-highlighting)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;保存文件。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;问题解答区&quot;&gt;&lt;a href=&quot;#问题解答区&quot; class=&quot;headerlink&quot; title=&quot;问题解答区&quot;&gt;&lt;/a&gt;问题解答区&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动iTerm 2 默认使用dash改用zsh解决方法：&lt;br&gt;&lt;code&gt;chsh -s /bin/zsh&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行指令&lt;code&gt;pip install powerline-status&lt;/code&gt;出错解决方法：&lt;br&gt;需要下载苹果官方的&lt;a href=&quot;https://developer.apple.com/downloads/index.action?name=for%20Xcode%20&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Command line&lt;/a&gt;。必須官方工具下载最新版 Command Line&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;⌘+Q关闭iTerm 2 时每次弹窗提示问题：&lt;br&gt;iTerm 2 中，进入&lt;code&gt;Preference&lt;/code&gt;-&lt;code&gt;General&lt;/code&gt;-&lt;code&gt;Closing栏目&lt;/code&gt;，将&lt;code&gt;Confirm &amp;quot;Quit iTerm2(⌘Q)&amp;quot; command&lt;/code&gt;选项勾选去掉就行&lt;/li&gt;
&lt;li&gt;找不到.zshrc文件问题：&lt;br&gt;我这里将我的.zshrc文件分享出来。供大家下载&lt;a href=&quot;http://pan.baidu.com/s/1sk1LqCt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;网盘&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;转自&lt;/strong&gt;&lt;a href=&quot;http://www.jianshu.com/p/7de00c73a2bb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/7de00c73a2bb&lt;/
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac OS X 用终端破解附近 Wifi 密码</title>
    <link href="http://yoursite.com//blog/2016/03/Mac-OS-X-%E7%94%A8%E7%BB%88%E7%AB%AF%E7%A0%B4%E8%A7%A3%E9%99%84%E8%BF%91-Wifi-%E5%AF%86%E7%A0%81-1.html"/>
    <id>http://yoursite.com//blog/2016/03/Mac-OS-X-用终端破解附近-Wifi-密码-1.html</id>
    <published>2016-03-06T14:40:58.000Z</published>
    <updated>2016-05-25T00:45:15.000Z</updated>
    
    <content type="html">&lt;p&gt;首先需要确保电脑装有 Xcode 和 MacPorts。Xcode 可以直接从 App Store 免费下载，MacPorts 的下载地址如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://distfiles.macports.org/MacPorts/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://distfiles.macports.org/MacPorts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MacPorts 前称 DarwinPorts，是一个软件包管理系统，用来简化 Mac OS X 系统上软件的安装。它是一个用来简化自由软件/开放源代码软件的安装的自由/开放源代码项目，与Fink和BSD类ports套件的目标和功能类似。它可以让用户在终端中简单的输入 port install 软件包名称来安装软件包，软件的下载、编译、安装以及它依赖的所有其他软件包的安装都会自动完成。&lt;/p&gt;
&lt;p&gt;我下载的是「MacPorts-2.2.1-10.9-Mavericks.pkg」这个版本。&lt;/p&gt;
&lt;p&gt;安装好 Macport 后，则开始安装Aircrack，打开终端输入命令：&lt;/p&gt;
&lt;figure class=&quot;highlight elm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;port&lt;/span&gt; install aircrack-ng&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等待一段时间安装，然后使用mac系统下自带的 airport 进行附近 wifi 信号的监测。&lt;/p&gt;
&lt;p&gt;首先我们将 airport 命令引入到用户命令里，在终端输入：&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -s &lt;span class=&quot;regexp&quot;&gt;/System/&lt;/span&gt;Library&lt;span class=&quot;regexp&quot;&gt;/PrivateFrameworks/&lt;/span&gt;Apple80211.framework&lt;span class=&quot;regexp&quot;&gt;/Versions/&lt;/span&gt;Current&lt;span class=&quot;regexp&quot;&gt;/Resources/&lt;/span&gt;airport &lt;span class=&quot;regexp&quot;&gt;/usr/&lt;/span&gt;sbin&lt;span class=&quot;regexp&quot;&gt;/airport&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;el capitan 后只能用&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:/System/Library/PrivateFrameworks/Apple80211&lt;/span&gt;.framework/Versions/Current/Resources/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chaishiwei.com/blog/wp-content/uploads/2014/04/201404131-600x296.png&quot; alt=&quot;201404131&quot;&gt;&lt;/p&gt;
&lt;p&gt;SSID 是 wifi名称，RSSI 是信号强度，CHANNEL 是信道。&lt;/p&gt;
&lt;p&gt;接着挑选一个信号强的信道进行监听抓包（比如信道1），在终端输入：&lt;br&gt;&lt;figure class=&quot;highlight elm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;sudo&lt;/span&gt; air&lt;span class=&quot;keyword&quot;&gt;port&lt;/span&gt; en1 sniff  1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时，会提示输入管理员密码，输入时密码是不会显示出来，输入完敲回车就开始监听抓包了。命令中的 en1 是自己电脑的网卡地址，有的电脑可能是 en0，根据自己的实际情况进行输入，查看电脑网卡地址的地方如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chaishiwei.com/blog/wp-content/uploads/2014/04/QQ20140413-1-600x415.jpg&quot; alt=&quot;QQ20140413-1&quot;&gt;&lt;/p&gt;
&lt;p&gt;大概等待2-5分钟就可以按 command + c 组合键退出查看含有抓包的cap文件了，文件所在地址是/tmp，可以使用Finder的前往文件夹功能进入：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chaishiwei.com/blog/wp-content/uploads/2014/04/QQ20140413-2.jpg&quot; alt=&quot;QQ20140413-2&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以将cap文件移到我们想保存的地方，也可以不移走（重启后就没有了）。&lt;/p&gt;
&lt;p&gt;接下来就进入关键的破解wifi密码的过程了，先在桌面建一个文件夹，取名「wifi」，将字典和cap文件都放到这个文件夹内（假设字典是01.txt，cap文件名是01.cap，在终端输入：&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; ~/Desktop/wifi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aircrack-ng -w 01.txt 01.&lt;span class=&quot;keyword&quot;&gt;cap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://chaishiwei.com/blog/wp-content/uploads/2014/04/201404132-600x464.png&quot; alt=&quot;201404132&quot;&gt;&lt;/p&gt;
&lt;p&gt;就可以看到cap文件内的抓包情况，Encryption中（0 handshake）是抓包失败，（1 handshake）则是抓包成功。图中看到第11行抓包成功，则在「Index number of target network ?」这里输入11后敲回车：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chaishiwei.com/blog/wp-content/uploads/2014/04/201404133.png&quot; alt=&quot;201404133&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果cap文件内全是（0 handshake），就按 command + c 组合键退出。重新回到「sudo airport en1 sniff 1」这步进行监听抓包。抓包成功率受到 wifi 信号强弱、电脑与路由器距离远近、路由器是否正处在收发数据状态的影响。总之多试几次、监听时间适当延长些，可以大大提高成功率。&lt;/p&gt;
&lt;p&gt;进入到破解过程界面，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chaishiwei.com/blog/wp-content/uploads/2014/04/201404134.png&quot; alt=&quot;201404134&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下来等待破解结果就行了，中断破解过程可以直接按 command + c 组合键退出。破解过程所需时间长短受电脑硬件配置、字典体积大小的影响。如果01.txt字典破解失败，则可以换其它字典进行破解，直到破解成功。&lt;/p&gt;
&lt;p&gt;使用一个好的字典是很重要的，一个9位的纯数字字典大概1G多，结果经过几个小时的破解，如果密码是987654321就很令人郁闷了，所以最好准备几个常用的wifi密码字典，可以大大提高成功率和节省时间。常用字典可以直接百度Google搜索下载。&lt;/p&gt;
&lt;p&gt;我在测试这个暴力破解方法时并没成功过，估计是附近的wifi密码都太冷门，导致我准备的几个字典都没对应上。如果破解成功则会如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chaishiwei.com/blog/wp-content/uploads/2014/04/QQ20140413-12-600x345.jpg&quot; alt=&quot;QQ20140413-12&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;首先需要确保电脑装有 Xcode 和 MacPorts。Xcode 可以直接从 App Store 免费下载，MacPorts 的下载地址如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://distfiles.macports.org/MacPorts/&quot; target
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Mac Hack" scheme="http://yoursite.com/tags/Mac-Hack/"/>
    
  </entry>
  
  <entry>
    <title>Hexo备份与搭建</title>
    <link href="http://yoursite.com//blog/2016/03/HexoBackup.html"/>
    <id>http://yoursite.com//blog/2016/03/HexoBackup.html</id>
    <published>2016-03-06T02:09:53.000Z</published>
    <updated>2016-05-24T05:52:55.000Z</updated>
    
    <content type="html">&lt;p&gt;#&lt;a href=&quot;http://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html#more&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo搭建&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;mkdir&lt;/span&gt; hexo  #创建一个文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; hexo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt; hexo-&lt;span class=&quot;keyword&quot;&gt;cli&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo --&lt;span class=&quot;keyword&quot;&gt;save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;部署Hexo：在Git shell 中输入&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo&lt;/span&gt; init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装Hexo 插件：自动生成sitemap,Rss，部署到git等，建议安装&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-&lt;span class=&quot;keyword&quot;&gt;archive&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-&lt;span class=&quot;keyword&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-tag &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-&lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-git &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-heroku &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-rsync &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-openshift &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-marked@&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-stylus@&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-feed@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-sitemap@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Git获取SSHKey&quot;&gt;&lt;a href=&quot;#Git获取SSHKey&quot; class=&quot;headerlink&quot; title=&quot;Git获取SSHKey&quot;&gt;&lt;/a&gt;Git获取SSHKey&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;打开 Git Bash.&lt;/li&gt;
&lt;li&gt;Paste the text below, substituting in your GitHub email address.&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -b 4096 -C &lt;span class=&quot;string&quot;&gt;&quot;your_email@example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;your_email@youremail.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3.回车3次&lt;/p&gt;
&lt;p&gt;4.在Git Bash 输入&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh -T git@github&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh -T git@git&lt;span class=&quot;selector-class&quot;&gt;.coding&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.net&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;测试是否生效&lt;/p&gt;
&lt;p&gt;5.如下提示说明成功&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hi username! &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You&#39;ve successfully authenticated, &lt;span class=&quot;keyword&quot;&gt;but&lt;/span&gt; GitHub &lt;span class=&quot;keyword&quot;&gt;does&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; provide shell access.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Git-backup&quot;&gt;&lt;a href=&quot;#Git-backup&quot; class=&quot;headerlink&quot; title=&quot;Git-backup&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/coneycode/hexo-git-backup&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git-backup&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h2&gt;&lt;p&gt;if version is 3.x.x, you should install as follow:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-git-backup --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Update&quot;&gt;&lt;a href=&quot;#Update&quot; class=&quot;headerlink&quot; title=&quot;Update&quot;&gt;&lt;/a&gt;Update&lt;/h2&gt;&lt;p&gt;if you install with –save, you must remove firstly when you update it.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm remove hexo-git-backup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-git-backup --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Configure&quot;&gt;&lt;a href=&quot;#Configure&quot; class=&quot;headerlink&quot; title=&quot;Configure&quot;&gt;&lt;/a&gt;Configure&lt;/h2&gt;&lt;p&gt;You should configure this plugin in &lt;code&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;backup:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    type:&lt;/span&gt; git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    repository:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;       github:&lt;/span&gt; git@github.com:xxx/xxx.git,branchName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;       gitcafe:&lt;/span&gt; git@github.com:xxx/xxx.git,branchName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Using&quot;&gt;&lt;a href=&quot;#Using&quot; class=&quot;headerlink&quot; title=&quot;Using&quot;&gt;&lt;/a&gt;Using&lt;/h2&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo&lt;/span&gt; backup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;or&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo&lt;/span&gt; b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Options&quot;&gt;&lt;a href=&quot;#Options&quot; class=&quot;headerlink&quot; title=&quot;Options&quot;&gt;&lt;/a&gt;Options&lt;/h2&gt;&lt;p&gt;if you want to back up with your theme,just add &lt;code&gt;theme: your theme name,your theme name&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;backup:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    type:&lt;/span&gt; git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    theme:&lt;/span&gt; coney,landscape,xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    repository:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;       github:&lt;/span&gt; git@github.com:xxx/xxx.git,branchName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;       gitcafe:&lt;/span&gt; git@github.com:xxx/xxx.git,branchName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Attention: if you do as above, the dir &lt;code&gt;themes/coney/.git&lt;/code&gt;will be removed&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;if you want DIY commit message, just add ‘message: update xxx’.&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;backup:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    type:&lt;/span&gt; git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    message:&lt;/span&gt; update xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    repository:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;       github:&lt;/span&gt; git@github.com:xxx/xxx.git,branchName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;       gitcafe:&lt;/span&gt; git@github.com:xxx/xxx.git,branchName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now you can backup all the blog!&lt;/p&gt;
&lt;h2 id=&quot;Problems&quot;&gt;&lt;a href=&quot;#Problems&quot; class=&quot;headerlink&quot; title=&quot;Problems&quot;&gt;&lt;/a&gt;Problems&lt;/h2&gt;&lt;p&gt;You may get some troubles by your computer’ permission。&lt;/p&gt;
&lt;p&gt;###Error: EISDIR, open&lt;br&gt;it is caused by permission.&lt;br&gt;just do ‘sudo hexo b’&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;sudo&lt;/span&gt; hexo b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;#&lt;a href=&quot;http://www.ezlippi.com/blog/2016/02/jekyll-to-hexo.html#more&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo搭建&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;high
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Windows安装</title>
    <link href="http://yoursite.com//blog/2016/03/Hexo%20Windows%E5%AE%89%E8%A3%85.html"/>
    <id>http://yoursite.com//blog/2016/03/Hexo Windows安装.html</id>
    <published>2016-03-05T17:10:17.000Z</published>
    <updated>2016-05-24T12:11:15.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;本地安装hexo步骤&quot;&gt;&lt;a href=&quot;#本地安装hexo步骤&quot; class=&quot;headerlink&quot; title=&quot;本地安装hexo步骤&quot;&gt;&lt;/a&gt;本地安装hexo步骤&lt;/h1&gt;&lt;p&gt;注意：本节教程只针对Windows用户，Linux和Mac用户请移步hexo安装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装Git&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下载 msysgit 并执行即可完成安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装Node.js&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Windows 环境下安装 Node.js 非常简单，仅须下载安装文件并执行即可完成安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装hexo&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）&lt;br&gt;npm install -g hexo&lt;br&gt;安装完成后，在你喜爱的文件夹下（如H:\hexo），执行以下指令(在H:\hexo内点击鼠标右键，选择Git bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。创建hexo文件夹&lt;br&gt;hexo init&lt;br&gt;安装依赖包&lt;br&gt;本地查看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在我们已经搭建起本地的hexo博客了，执行以下命令(在H:\hexo)，然后到浏览器输入localhost:4000看看。&lt;br&gt;hexo generate&lt;br&gt;hexo server&lt;br&gt;好了，至此，本地博客已经搭建起来了，只是本地哦，别人看不到的。下面，我们要部署到Github。&lt;/p&gt;
&lt;h1 id=&quot;提交hexo到github步骤&quot;&gt;&lt;a href=&quot;#提交hexo到github步骤&quot; class=&quot;headerlink&quot; title=&quot;提交hexo到github步骤&quot;&gt;&lt;/a&gt;提交hexo到github步骤&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;注册Github账号&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;已有账号可以跳过，没有的，请在此进行注册，很简单，这里就不介绍了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建repository&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在自己Github主页右下角，创建一个新的repository。比如我的Github账号是imsofter，那么我应该创建的repository名字应该是imsofter.github.io。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;部署&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编辑_config.yml(在H:\hexo下)。你在部署时，要把下面的zippera都换成你的账号名。&lt;br&gt;deploy:&lt;br&gt;type: github&lt;br&gt;repository: &lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;/span&gt; &lt;a href=&quot;https://github.com/imsofter/imsofter.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/imsofter/imsofter.github.io.git&lt;/a&gt;&lt;br&gt;branch: master&lt;br&gt;执行下列指令即可完成部署。据说最新版本的hexo 中，这里的 type 要写成 git，而不是 github。&lt;br&gt;hexo generate&lt;br&gt;hexo deploy&lt;br&gt;记住：每次修改本地文件后，需要hexo generate才能保存。每次使用命令时，都要在H:\hexo目录下。注意：有些新用户需要设置 ssh，否则上述命令会失败。ssh 的介绍和设置方法请看官方教程，不用担心，很简单。&lt;br&gt;Okay,我们的博客已经完全搭建起来了，在浏览器访问zippera.github.io就能看到你的成就了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;以下为安装出问题的总结&quot;&gt;&lt;a href=&quot;#以下为安装出问题的总结&quot; class=&quot;headerlink&quot; title=&quot;以下为安装出问题的总结&quot;&gt;&lt;/a&gt;以下为安装出问题的总结&lt;/h1&gt;&lt;h2 id=&quot;安装hexo后，bash-hexo-command-not-found&quot;&gt;&lt;a href=&quot;#安装hexo后，bash-hexo-command-not-found&quot; class=&quot;headerlink&quot; title=&quot;安装hexo后，bash: hexo: command not found&quot;&gt;&lt;/a&gt;安装hexo后，bash: hexo: command not found&lt;/h2&gt;&lt;p&gt;找到C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo\bin\，将此目录添加到环境变量中&lt;/p&gt;
&lt;h2 id=&quot;执行-hexo-deploy-后-出现-error-deployer-not-found-github-的错误&quot;&gt;&lt;a href=&quot;#执行-hexo-deploy-后-出现-error-deployer-not-found-github-的错误&quot; class=&quot;headerlink&quot; title=&quot;执行 hexo deploy 后,出现 error deployer not found:github 的错误&quot;&gt;&lt;/a&gt;执行 hexo deploy 后,出现 error deployer not found:github 的错误&lt;/h2&gt;&lt;p&gt;hexo 更新到3.0之后，deploy的type 的github需要改成git&lt;br&gt;repository路径: &lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;/span&gt; &lt;a href=&quot;http://github.com/imsofter/imsofter.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://github.com/imsofter/imsofter.github.io.git&lt;/a&gt; &lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;/span&gt; （需要将https修改成http）还不行的话尝试&lt;br&gt;git@github.com:imsofter/imsofter.github.io.git路径&lt;br&gt;改了之后执行npm install hexo-deployer-git –save 安装hexo对于git的部署工具。&lt;/p&gt;
&lt;p&gt;然后再部署试试&lt;/p&gt;
&lt;h2 id=&quot;验证报错报错verification-failed：&quot;&gt;&lt;a href=&quot;#验证报错报错verification-failed：&quot; class=&quot;headerlink&quot; title=&quot;验证报错报错verification failed：&quot;&gt;&lt;/a&gt;验证报错报错verification failed：&lt;/h2&gt;&lt;p&gt;Error: Host key verification failed.&lt;br&gt;fatal: Could not read from remote repository.&lt;br&gt;Please make sure you have the correct access rights and the repository exists.&lt;/p&gt;
&lt;p&gt;解决方法：条件SSHkey&lt;br&gt;$ ssh-keygen -t rsa -C “imsofter@163.com”&lt;br&gt;三次回车，即可设置密码为空&lt;/p&gt;
&lt;p&gt;将生成的C:\Users\Administrator.ssh目录下的id_rsa.pub添加到github上&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/577880/201602/577880-20160229183347876-960342404.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;再测试是否可以连接到github上，&lt;br&gt;$ ssh git@github.com&lt;br&gt;Hi imsofter! You’ve successfully authenticated, but GitHub does not provide shell access.&lt;br&gt;Connection to github.com closed.&lt;/p&gt;
&lt;p&gt;再可以将代码推上github上了。&lt;/p&gt;
&lt;h2 id=&quot;绑定域名&quot;&gt;&lt;a href=&quot;#绑定域名&quot; class=&quot;headerlink&quot; title=&quot;绑定域名&quot;&gt;&lt;/a&gt;绑定域名&lt;/h2&gt;&lt;p&gt;在source目录下创建CNAME文件&lt;br&gt;DNS设置&lt;br&gt;用DNSpod，快，免费，稳定。&lt;br&gt;注册DNSpod，添加域名，如下图设置。&lt;br&gt;&lt;img src=&quot;http://pic.yupoo.com/vankos_v/DKgbA7WH/wLVyM.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;其中A的两条记录指向的ip地址是github Pages的提供的ip&lt;br&gt;192.30.252.153&lt;br&gt;192.30.252.154&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;本地安装hexo步骤&quot;&gt;&lt;a href=&quot;#本地安装hexo步骤&quot; class=&quot;headerlink&quot; title=&quot;本地安装hexo步骤&quot;&gt;&lt;/a&gt;本地安装hexo步骤&lt;/h1&gt;&lt;p&gt;注意：本节教程只针对Windows用户，Linux和Mac用户请移步hexo
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
